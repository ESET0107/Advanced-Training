@{
    ViewData["Title"] = "Course List";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Course Details</h2>
        <div class="d-flex align-items-center gap-3">
            @* <button id="profileBtn" class="btn btn-outline-primary d-flex align-items-center">
                <i class="bi bi-person-circle fs-5 me-2"></i><span id="usernameDisplay">User</span>
            </button> *@
            <button id="logoutBtn" class="btn btn-outline-danger">
                <i class="bi bi-box-arrow-right"></i> Logout
            </button>
        </div>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div></div>
        <div>
            <button id="studentsPageBtn" class="btn btn-secondary me-2"><i class="bi bi-people"></i> Go to Students</button>
            <button id="addCourseBtn" class="btn btn-success"><i class="bi bi-plus-lg"></i> Add Course</button>
        </div>
    </div>
    <table class="table table-bordered table-striped shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>Course ID</th>
                <th>Course Code</th>
                <th>Course Name</th>
                <th>Department</th>
                <th>Semester</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="courseTableBody"></tbody>
    </table>
    <nav><ul class="pagination justify-content-center" id="pagination"></ul></nav>
    <p id="msg" class="text-danger fw-semibold text-center"></p>
</div>
@* <div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-lg">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="profileModalLabel"><i class="bi bi-person-circle me-2"></i>User Profile</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <i class="bi bi-person-circle text-primary" style="font-size: 4rem;"></i>
                </div>
                <p><strong>Username:</strong> <span id="modalUsername"></span></p>
                <p><strong>Role:</strong> <span id="modalUserRole"></span></p>
                <hr>
                <div class="d-grid">
                    <button id="resetPasswordBtn" class="btn btn-outline-primary"><i class="bi bi-key me-2"></i> Reset Password</button>
                </div>
            </div>
        </div>
    </div>
</div> *@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        const token = localStorage.getItem("jwtToken");
        const username = localStorage.getItem("username");
        const role = localStorage.getItem("role");
        if (!token) {
            $("#msg").text("Please log in first!");
            setTimeout(() => window.location.href = "/Auth/Index", 1000);
            return;
        }
        $("#usernameDisplay").text(username || "User");
        let courses = [];
        let currentPage = 1;
        const pageSize = 5;
        function loadCourses() {
            $.ajax({
                url: "https://localhost:7009/api/Courses/AllCourses",
                type: "GET",
                headers: { "Authorization": "Bearer " + token },
                success: function (data) {
                    courses = data;
                    renderTable();
                    renderPagination();
                },
                error: function (xhr) {
                    if (xhr.status === 401) $("#msg").text("Unauthorized: Please login again.");
                    else $("#msg").text("Error fetching data from server.");
                }
            });
        }
        function renderTable() {
            const start = (currentPage - 1) * pageSize;
            const paginated = courses.slice(start, start + pageSize);
            let rows = "";
            $.each(paginated, function (i, course) {
                rows += `<tr>
                        <td>${course.courseId}</td>
                        <td>${course.courseCode}</td>
                        <td>${course.courseName}</td>
                        <td>${course.department}</td>
                        <td>${course.semester}</td>
                        <td>
                            <button class="btn btn-sm btn-primary editBtn" data-id="${course.courseId}">
                                <i class="bi bi-pencil-square"></i> Edit
                            </button>
                            <button class="btn btn-sm btn-danger deleteBtn" data-id="${course.courseId}" data-name="${course.courseName}">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>`;
            });
            $("#courseTableBody").html(rows);
        }
        function renderPagination() {
            const totalPages = Math.ceil(courses.length / pageSize);
            let paginationHtml = "";
            for (let i = 1; i <= totalPages; i++) {
                paginationHtml += `<li class="page-item ${i === currentPage ? "active" : ""}">
                        <a class="page-link" href="#">${i}</a>
                    </li>`;
            }
            $("#pagination").html(paginationHtml);
        }
        $("#pagination").on("click", ".page-link", function (e) {
            e.preventDefault();
            currentPage = parseInt($(this).text());
            renderTable();
            renderPagination();
        });
        $("#addCourseBtn").click(() => window.location.href = "/Courses/Add");
        $("#studentsPageBtn").click(() => window.location.href = "/Students/Index");
        $(document).on("click", ".editBtn", function () {
            const id = $(this).data("id");
            window.location.href = "/Courses/Edit/" + id;
        });
        $(document).on("click", ".deleteBtn", function () {
            const id = $(this).data("id");
            const name = $(this).data("name");
            if (confirm(`Are you sure you want to delete "${name}"?`)) {
                $.ajax({
                    url: "https://localhost:7009/api/Courses/DeleteCourse/" + id,
                    type: "DELETE",
                    headers: { "Authorization": "Bearer " + token },
                    success: function () {
                        alert("Course deleted successfully!");
                        loadCourses();
                    },
                    error: function (xhr) {
                        alert("Error deleting course: " + xhr.responseText);
                    }
                });
            }
        });
        // $("#profileBtn").click(function () {
        //     $("#modalUsername").text(username || "Unknown");
        //     $("#modalUserRole").text(role || "N/A");
        //     $("#profileModal").modal("show");
        // });
        // $("#resetPasswordBtn").click(function () {
        //     $("#profileModal").modal("hide");
        //     window.location.href = "/Auth/ResetPassword";
        // });
        $("#logoutBtn").click(function () {
            localStorage.clear();
            window.location.href = "/Auth/Index";
        });
        loadCourses();
    });
</script>